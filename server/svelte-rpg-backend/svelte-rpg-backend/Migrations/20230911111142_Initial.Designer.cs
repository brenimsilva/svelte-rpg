// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using svelte_rpg_backend.Context;

#nullable disable

namespace svelte_rpg_backend.Migrations
{
    [DbContext(typeof(RpgContext))]
    [Migration("20230911111142_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("svelte_rpg_backend.Models.ActionText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("ActionTextSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("AttributeSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Config", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("ConfigSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.EquipmentSlot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)");

                    b.HasKey("Id");

                    b.ToTable("EquipmentSlotSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Hero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<string>("HeroName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<int>("PerkPoints")
                        .HasColumnType("int");

                    b.Property<int>("StatPoints")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HeroSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.HeroAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("HeroId");

                    b.ToTable("HeroAttributeSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.HeroEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("EquipmentSlotId")
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentSlotId");

                    b.HasIndex("HeroId");

                    b.HasIndex("ItemId");

                    b.ToTable("HeroEquipmentSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.HeroStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.HasIndex("StatId");

                    b.ToTable("HeroStatSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemLevel")
                        .HasColumnType("int");

                    b.Property<int>("ItemListId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ItemSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.ItemAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemAttributeSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.ItemLoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("LootId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("LootId");

                    b.ToTable("ItemLootSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.ItemSlot", b =>
                {
                    b.Property<int>("ItemSlotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("HeroId")
                        .HasColumnType("int");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int");

                    b.HasKey("ItemSlotId");

                    b.HasIndex("HeroId");

                    b.HasIndex("ItemId")
                        .IsUnique();

                    b.ToTable("ItemSlotSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.ItemStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("StatId");

                    b.ToTable("ItemStatSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ItemTypeSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Loot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Exp")
                        .HasColumnType("int");

                    b.Property<int>("Gold")
                        .HasColumnType("int");

                    b.Property<int?>("MonsterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.ToTable("LootSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.ToTable("MonsterSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.MonsterAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterAttributeSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.MonsterLoot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("DropChance")
                        .HasColumnType("double");

                    b.Property<int>("LootId")
                        .HasColumnType("int");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LootId");

                    b.HasIndex("MonsterId");

                    b.ToTable("MonsterLootSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.MonsterStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("MonsterId")
                        .HasColumnType("int");

                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MonsterId");

                    b.HasIndex("StatId");

                    b.ToTable("MonsterStatSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Perk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("HeroId")
                        .HasColumnType("int");

                    b.Property<string>("PerkName")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)");

                    b.HasKey("Id");

                    b.HasIndex("HeroId");

                    b.ToTable("PerkSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.PerkAttribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int");

                    b.Property<int>("PerkId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("AttributeId");

                    b.HasIndex("PerkId");

                    b.ToTable("PerkAttributeSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.PerkStat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PerkId")
                        .HasColumnType("int");

                    b.Property<int>("StatId")
                        .HasColumnType("int");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerkId");

                    b.HasIndex("StatId");

                    b.ToTable("PerkStatSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Rarity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("RaritySet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("HeroId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("SkillBasePower")
                        .HasColumnType("int");

                    b.Property<int>("SkillTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("HeroId");

                    b.HasIndex("SkillTypeId");

                    b.ToTable("SkillSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.SkillType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("SkillTypeSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Stat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("varchar(128)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("StatName")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("varchar(32)");

                    b.HasKey("Id");

                    b.ToTable("StatSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("UserTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UserId");

                    b.HasIndex("UserTypeId");

                    b.ToTable("UserSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.UserType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("varchar(24)");

                    b.HasKey("Id");

                    b.ToTable("UserTypeSet");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Hero", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.User", null)
                        .WithMany("Heroes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.HeroAttribute", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Attribute", null)
                        .WithMany("HeroAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Hero", null)
                        .WithMany("Attributes")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.HeroEquipment", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.EquipmentSlot", "EquipmentSlot")
                        .WithMany()
                        .HasForeignKey("EquipmentSlotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Hero", null)
                        .WithMany("HeroEquipments")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentSlot");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.HeroStat", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Hero", null)
                        .WithMany("Stats")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Stat", null)
                        .WithMany("HeroStats")
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.ItemAttribute", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Attribute", null)
                        .WithMany("ItemAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Item", null)
                        .WithMany("ItemAttributes")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.ItemLoot", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Item", null)
                        .WithMany("ItemLoots")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Loot", null)
                        .WithMany("ItemLoot")
                        .HasForeignKey("LootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.ItemSlot", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Hero", null)
                        .WithMany("ItemSlots")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Item", null)
                        .WithOne("Slot")
                        .HasForeignKey("svelte_rpg_backend.Models.ItemSlot", "ItemId");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.ItemStat", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Item", null)
                        .WithMany("ItemStats")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Stat", null)
                        .WithMany("ItemStats")
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Loot", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Monster", null)
                        .WithMany("Loots")
                        .HasForeignKey("MonsterId");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.MonsterAttribute", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Attribute", null)
                        .WithMany("MonsterAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Monster", null)
                        .WithMany("Attributes")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.MonsterLoot", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Loot", null)
                        .WithMany("MonsterLoots")
                        .HasForeignKey("LootId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Monster", null)
                        .WithMany("MonsterLoots")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.MonsterStat", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Monster", null)
                        .WithMany("Stats")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Stat", null)
                        .WithMany("MonsterStats")
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Perk", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Hero", null)
                        .WithMany("Perks")
                        .HasForeignKey("HeroId");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.PerkAttribute", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Attribute", null)
                        .WithMany("PerkAttributes")
                        .HasForeignKey("AttributeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Perk", null)
                        .WithMany("AttributesChanged")
                        .HasForeignKey("PerkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.PerkStat", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.Perk", null)
                        .WithMany("StatsChanged")
                        .HasForeignKey("PerkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Stat", null)
                        .WithMany("PerkStats")
                        .HasForeignKey("StatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Skill", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.ActionText", "ActionText")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("svelte_rpg_backend.Models.Hero", null)
                        .WithMany("Skills")
                        .HasForeignKey("HeroId");

                    b.HasOne("svelte_rpg_backend.Models.SkillType", "SkillType")
                        .WithMany()
                        .HasForeignKey("SkillTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionText");

                    b.Navigation("SkillType");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.User", b =>
                {
                    b.HasOne("svelte_rpg_backend.Models.UserType", null)
                        .WithMany("Users")
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Attribute", b =>
                {
                    b.Navigation("HeroAttributes");

                    b.Navigation("ItemAttributes");

                    b.Navigation("MonsterAttributes");

                    b.Navigation("PerkAttributes");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Hero", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("HeroEquipments");

                    b.Navigation("ItemSlots");

                    b.Navigation("Perks");

                    b.Navigation("Skills");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Item", b =>
                {
                    b.Navigation("ItemAttributes");

                    b.Navigation("ItemLoots");

                    b.Navigation("ItemStats");

                    b.Navigation("Slot");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Loot", b =>
                {
                    b.Navigation("ItemLoot");

                    b.Navigation("MonsterLoots");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Monster", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("Loots");

                    b.Navigation("MonsterLoots");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Perk", b =>
                {
                    b.Navigation("AttributesChanged");

                    b.Navigation("StatsChanged");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.Stat", b =>
                {
                    b.Navigation("HeroStats");

                    b.Navigation("ItemStats");

                    b.Navigation("MonsterStats");

                    b.Navigation("PerkStats");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.User", b =>
                {
                    b.Navigation("Heroes");
                });

            modelBuilder.Entity("svelte_rpg_backend.Models.UserType", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
